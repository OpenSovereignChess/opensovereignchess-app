import 'package:test/test.dart';
import 'package:dartsovereignchess/dartsovereignchess.dart';
import 'package:dartsovereignchess/src/debug.dart';

void main() {
  test('fromSquare', () {
    expect(
      SquareSet.fromSquare(Square.a1),
      SquareSet(0, 0, 0, 0, 0, 0, 0, 1),
    );
  });

  test('fromSquare', () {
    expect(
      SquareSet.fromSquares([Square.a1, Square.b1]),
      SquareSet(0, 0, 0, 0, 0, 0, 0, 3),
    );
  });

  test('has', () {
    final squareSet = SquareSet(0, 0, 0, 0, 0, 0, 0, 1);
    expect(squareSet.has(Square.a1), true);

    final squareSet2 = SquareSet(0, 0, 0, 0, 0, 0, 0x1, 0);
    expect(squareSet2.has(Square.a3), true);

    final squareSet3 = SquareSet(0, 0, 0, 0, 0, 0x80, 0, 0);
    expect(squareSet3.has(Square.h5), true);
  });

  test('withSquare', () {
    final squareSet = SquareSet.empty;
    final result = squareSet.withSquare(Square.a1);
    //print(humanReadableSquareSet(result));
    expect(result.has(Square.a1), true);
  });

  test('squares', () {
    expect(makeSquareSet('''
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . 1 . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
''').squares.toList(), [
      Square.a1,
      Square.a3,
      Square.a6,
      Square.p9,
      Square.h13,
      Square.p16,
    ]);
  });

  test('shr', () {
    expect(SquareSet.southRay.shr(1), makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''));
    expect(SquareSet.southRay.shr(32), makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''));
    expect(SquareSet.southRay.shr(48), makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''));
  });

  test('shl', () {
    expect(SquareSet.northRay.shl(1), makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''));
    expect(SquareSet.northRay.shl(48), makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''));
  });

  test('xor', () {
    expect(
      makeSquareSet('''
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . 1 . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
''') ^ makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . 1 . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
'''),
      makeSquareSet('''
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . 1 . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . 1 . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
'''),
    );
  });

  test('flipVertical', () {
    final before = makeSquareSet('''
. . 1 1 1 1 1 1 1 1 1 . . . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . 1 1 . . . . . .
. . 1 1 1 1 1 1 . . . . . . . .
. . 1 . . . . 1 . . . . . . . .
. . 1 . . . . . 1 . . . . . . .
. . 1 . . . . . . 1 . . . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . . . 1 . . .
''');
    final after = makeSquareSet('''
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . . 1 . . . . . .
. . 1 . . . . . 1 . . . . . . .
. . 1 . . . . 1 . . . . . . . .
. . 1 1 1 1 1 1 . . . . . . . .
. . 1 . . . . . 1 1 . . . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 1 1 1 1 1 1 1 1 . . . . .
''');
    expect(before.flipVertical(), after);
  });

  test('mirrorHorizontal', () {
    final before = makeSquareSet('''
. . 1 1 1 1 1 1 1 1 1 . . . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . . 1 . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . 1 1 . . . . . .
. . 1 1 1 1 1 1 . . . . . . . .
. . 1 . . . . 1 . . . . . . . .
. . 1 . . . . . 1 . . . . . . .
. . 1 . . . . . . 1 . . . . . .
. . 1 . . . . . . . 1 . . . . .
. . 1 . . . . . . . . 1 . . . .
. . 1 . . . . . . . . . 1 . . .
''');
    final after = makeSquareSet('''
. . . . . 1 1 1 1 1 1 1 1 1 . .
. . . . 1 . . . . . . . . 1 . .
. . . 1 . . . . . . . . . 1 . .
. . . 1 . . . . . . . . . 1 . .
. . . 1 . . . . . . . . . 1 . .
. . . 1 . . . . . . . . . 1 . .
. . . . 1 . . . . . . . . 1 . .
. . . . . 1 . . . . . . . 1 . .
. . . . . . 1 1 . . . . . 1 . .
. . . . . . . . 1 1 1 1 1 1 . .
. . . . . . . . 1 . . . . 1 . .
. . . . . . . 1 . . . . . 1 . .
. . . . . . 1 . . . . . . 1 . .
. . . . . 1 . . . . . . . 1 . .
. . . . 1 . . . . . . . . 1 . .
. . . 1 . . . . . . . . . 1 . .
''');
    expect(before.mirrorHorizontal(), after);
  });

  test('northRay', () {
    expect(
      SquareSet.northRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('eastRay', () {
    expect(
      SquareSet.eastRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. 1 1 1 1 1 1 1 1 . . . . . . .
'''),
    );
  });

  test('southRay', () {
    expect(
      SquareSet.southRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('westRay', () {
    expect(
      SquareSet.westRay,
      makeSquareSet('''
. . . . . . . 1 1 1 1 1 1 1 1 .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('northeastRay', () {
    expect(
      SquareSet.northeastRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . 1 . . . . . . .
. . . . . . . 1 . . . . . . . .
. . . . . . 1 . . . . . . . . .
. . . . . 1 . . . . . . . . . .
. . . . 1 . . . . . . . . . . .
. . . 1 . . . . . . . . . . . .
. . 1 . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('northwestRay', () {
    expect(
      SquareSet.northwestRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
1 . . . . . . . . . . . . . . .
. 1 . . . . . . . . . . . . . .
. . 1 . . . . . . . . . . . . .
. . . 1 . . . . . . . . . . . .
. . . . 1 . . . . . . . . . . .
. . . . . 1 . . . . . . . . . .
. . . . . . 1 . . . . . . . . .
. . . . . . . 1 . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('southeastRay', () {
    expect(
      SquareSet.southeastRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . 1 . . . . . . .
. . . . . . . . . 1 . . . . . .
. . . . . . . . . . 1 . . . . .
. . . . . . . . . . . 1 . . . .
. . . . . . . . . . . . 1 . . .
. . . . . . . . . . . . . 1 . .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . . . 1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('southwestRay', () {
    expect(
      SquareSet.southwestRay,
      makeSquareSet('''
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . 1 .
. . . . . . . . . . . . . 1 . .
. . . . . . . . . . . . 1 . . .
. . . . . . . . . . . 1 . . . .
. . . . . . . . . . 1 . . . . .
. . . . . . . . . 1 . . . . . .
. . . . . . . . 1 . . . . . . .
. . . . . . . 1 . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
'''),
    );
  });

  test('lsb', () {
    expect(
      SquareSet.fromSquare(Square.h1).withSquare(Square.d1).lsb(),
      Square.d1,
    );
  });
}
